import {
  DB_NAME_ETH,
  MONGO_HOST_IP,
  MONGO_HOST_PORT,
  MONGO_CONCURRENCY,
  MONGO_HOST_REMOTE_ETH_DB,
  MONGO_HOST_REMOTE_BLOCK_COLLECTION,
  MONGO_HOST_REMOTE_TRANSACTION_COLLECTION,
  MONGO_HOST_REMOTE_CONFIGURATION_COLLECTION,
  MONGODB_CONNECTION_STRING,
  DB_BLOCKS_COLLECTION,
  DB_TRANSACTIONS_COLLECTION,
  DB_CONFIGURATION_COLLECTION,
  MONGO_INFOSEC,
  MONGO_HOST_REMOTE,
  DB_NAME_BTC,
  MONGO_HOST_REMOTE_BTC_DB,
} from '.';
import { logger } from '../utils';

export const INFOSEC = MONGO_INFOSEC === 'true';
const MONGO_URI = `mongodb://${MONGO_HOST_IP}:${MONGO_HOST_PORT}`;

export const MONGODB = `mongodb://${MONGO_HOST_IP}:${MONGO_HOST_PORT}`; // MONGODB_CONNECTION_STRING; // INFOSEC ? MONGO_HOST_REMOTE : `${MONGO_URI}`;
export const MONGODB_CONCURRENCY = MONGO_CONCURRENCY;
export const BLOCKS_COLLECTION = 'mark_blocks'; // INFOSEC ? MONGO_HOST_REMOTE_BLOCK_COLLECTION : DB_BLOCKS_COLLECTION;
export const TRANSACTIONS_COLLECTION = 'mark_transactions'; // INFOSEC ? MONGO_HOST_REMOTE_TRANSACTION_COLLECTION : DB_TRANSACTIONS_COLLECTION;
export const CONFIGURATIONS = INFOSEC ? MONGO_HOST_REMOTE_CONFIGURATION_COLLECTION : DB_CONFIGURATION_COLLECTION;
export const DATABASE_NAME_ETH = INFOSEC ? MONGO_HOST_REMOTE_ETH_DB : DB_NAME_ETH;
export const DATABASE_NAME_BTC = 'bitcoin02_db'; // INFOSEC ? MONGO_HOST_REMOTE_BTC_DB : DB_NAME_BTC;

export const USE_FLAT_FILE = true;

export const print_mongo_settings = () => {
  logger.info(`mongo connection string:${MONGODB}, concurrency:${MONGODB_CONCURRENCY},
blocks:${BLOCKS_COLLECTION}, transactions:${TRANSACTIONS_COLLECTION}, configuration:${CONFIGURATIONS} use flat file:${USE_FLAT_FILE}`);
};

false && print_mongo_settings();
